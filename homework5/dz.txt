ЗАДАЧА1
Написать программу для валидации белорусских телефонных номеров. 
Пользователь должен вводить в консоли номер телефона в международном формате (например: +375297283847), 
программа должна проверять является ли он валидным, 
а также определить мобильного операторого и сохранить данные в словарь.
Правила определения оператора:
+375 25 xxx xx xx — life:)
+375 29 1xx xx xx — А1
+375 29 2xx xx xx — МТС
+375 29 3xx xx xx — А1
+375 29 5xx xx xx — МТС
+375 29 6xx xx xx — А1
+375 29 7xx xx xx — МТС
+375 29 8xx xx xx — МТС
+375 29 9xx xx xx — А1
+375 33 xxx xx xx — МТС
+375 44 xxx xx xx — А1
После каждой попытки спрашивать пользователя о том, хочет ли он проверить ещё один номер или завершить сеанс. 
При выборе завершения сеанса происходит выход из программы.

Правила валидности номера:
1. Строка длиной 13 символов.
2. Первый символ знак плюс, остальные цифры
3. Проверить код страны, он должен быть равен 375.
4. Правильный код хоть одного мобильного оператора.

Примеры вывода программы:
1. Если номер НЕ валидный:
{
  "success": False,
  "description": "Причины ошибки"
}
2. Если валидный:
{
  "success": True,
  "phone": +375258929929
  "operator": "life:)",
}


ЗАДАЧА 2
Написать программу для поиска в последовательности Фибоначчи. 
Последовательностью Фибоначчи называют последовательность чисел, где каждое следующее число равно 
сумме двух предыдущих: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, … до бесконечности
Пользователь вводит любой индекс (целое положительно число), 
программа должна вернуть соответствующее число из последовательности.
Примеры работы: 
Пользователь ввёл индекс 10
Результат: число Фибоначчи = 55

Пользователь ввёл число 0
Результат: число Фибоначчи = 0


ЗАДАЧА 3:
Программа на вход должна принимать файл с каким-то текстом. Пользователь вводит любую английскую букву.
Программа должна считать сколько раз эта буква встречается в тексте (без учёта регистра). То есть буквы n и N 
считать одинаковыми.

Пример работы:
Введите букву: n
Результат: буква встречается 124 раза в тексте.