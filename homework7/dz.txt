ЗАДАЧА 1
Написать функцию get_winners(results), которая на вход принимает
список результатов олимпиады. Каждый элемент в списке составляет целое число
от 0 до 600, которое соответствует количеству баллов набранных одним из
участников. Для простоты количество баллов ни у одного из участников не повторяется.
Номеру участника соответствует порядковый номер в списке (НЕ индекс)
то есть первый элемент списка - это количество баллов набранных участником с номером 1
второй элемент - это количество баллов, набранных участников с номером 2
и так далее
Функция должна вернуть список, состоящий из номеров участников, которые заняли первые три места в
порядке от первого до третьего
То есть у кого больше баллов - первый в списке, у кого меньше всего баллов - последний.
Пример использования:
result = number_of_winner([115, 352, 0, 310, 500])
print(result) # [5, 2, 4]



ЗАДАЧА 2
Написать функцию is_right_angle_triangle(a, b, c), которая принимает на вход 3 числа, 
которые записываются в три переменные a, b, c.
При этом самое большое число попадает в переменную c, самое маленькое в переменную a,
среднее в переменную b.
Функция должна:
1. Проверить может ли существовать треугольник с такими сторонами
(сумма любых двух сторон должна быть меньше третьей)
2. Если треугольник не может существовать функция возвращает словарь
{
    'result': False,
    'description': 'no such triangle exists'
}
3. Если треугольник может существовать, то функция проверяет является ли
треугольник прямоугольным (сумма квадратов меньших сторон (катетов) должна равняться
квадрату наибольшой стороны (гипотенузы))
4. Если треугольник не явяляется прямоугольным, то функция возвращает  словарь
{
    'result': False,
    'description': 'the triangle is not right-angled'
}
5. A если является, то возвращает словарь
{
    'result': True,
    'description': 'the triangle is right-angled'
}

Примеры использования:
result = is_right_angle_triangle(3, 4, 5)
print(result) 
# {
#    'result': True,
#    'description': 'the triangle is right-angled'
# } 
# так как из этих чисел можно собрать 
# прямоугольный треугольник (3, 4 - катеты, 5 - гпотенуза)

result = is_right_angle_triangle(3, 5, 9)
print(result) 
# {
#    'result': False,
#    'description': 'no such triangle exists'
# } 
# так как из этих чисел нельзя собрать треугольник

result = is_right_angle_triangle(11, 11, 21)
print(result) 
# {
#    'result': False,
#    'description': 'the triangle is not right-angled'
# } 
# так как из этих чисел можно собрать треугольник, но
# но не прямоугольный.