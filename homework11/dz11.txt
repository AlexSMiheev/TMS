ЗАДАНИЕ 1
Написать класс User, который принимает в инициализаторе следующие значения:
1. Имя ('John', 'Jane', 'Mary', 'David', 'Alex', 'Max', 'Nick', 'Anastasia', 'Leo')
2. Никнейм (имя + строка из 5 случайных цифр) например: Nick13917
3. Возраст (от 0 до 100)
4. Цвет глаз (blue, green, brown, grey, black)

Также класс должен создержать метод-свойство (property) info, которое возвращает словарь в 
формате {'Name': 'Nick', 'Nickname': 'Nick1397', 'Age': 20, 'Eyes_color': 'blue'},
естественно данные
подставляются те, которые переданы в инициализатор при создании объекта.
Так же над объектами класса должны поддерживаться операци ==, !=, >=, <=, >, <
В этих операциях сравнивается возраст двух объектов User.

Также в программе реализоват функцию-генератор users_generator(number), в которую передаётся
количество нужных юзеров.
Внутри функции идёт генерация каждого юзера, согласно количеству и возврат созданных объектов
через ключевое слово yield.
Данные для создания объекта генерировать рандомно с помощью модуля random.
=============================================================================
Структура программы:
AVAILABLE_NAMES = ['John', 'Jane', 'Mary', 'David', 'Alex', 'Max', 'Nick', 'Anastasia', 'Leo']
AVAILABLE_COLORS = ['blue', 'green', 'brown', 'grey', 'black']

class User:
    # тут реализовать класс


НЕ В КЛАССЕ User
def users_generator(number):
    # тут реализовать генерацию объектов класса User


gen = users_generator(50)
for user in gen:
    print(user.info) # на экран должно информацию о 50 сгенерированных юзеров.
=============================================================================


ЗАДАНИЕ 2
В задаче с декоратом (задание номер 8) переписать его в class-based стиле.